version: "3"

services:
  postgres:
    image: "postgres:latest"
    container_name: "postgres"
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
  webserver:
    build: .
    container_name: "webserver"
    command:
      - webserver
      - -p
      - "8080"
    entrypoint: airflow
    expose:
      - "8080"
    ports:
      - "8080:8080"
    volumes:
      - ./airflow:/usr/local/airflow
    depends_on:
      - postgres
  scheduler:
    build: .
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./airflow:/usr/local/airflow
    entrypoint: airflow scheduler
  redis:
    image: redis:latest
  worker_1:
    build: .
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./airflow:/usr/local/airflow
    entrypoint: airflow celery worker -q db_update_queue --pid /usr/local/airflow/w1.pid
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/w1.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
  worker_2:
    build: .
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./airflow/:/usr/local/airflow
    entrypoint: airflow celery worker -q db_update_queue --pid /usr/local/airflow/w2.pid
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/w2.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
  worker_3:
    build: .
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./airflow:/usr/local/airflow
    entrypoint: airflow celery worker --pid /usr/local/airflow/w3.pid
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/w3.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
  flower:
    build: .
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./airflow:/usr/local/airflow
    entrypoint: airflow celery flower
    ports:
      - "5555:5555"
  vault:
    image: vault:latest
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
      - VAULT_API_ADDR=http://127.0.0.1:8200
      - VAULT_ADDRESS=http://127.0.0.1:8200
      - VAULT_DEV_ROOT_TOKEN_ID=ZyrP7NtNw0hbLUqu7N3IlTdO
    expose:
      - 8200
    ports:
      - 8200:8200
    command: server -dev
